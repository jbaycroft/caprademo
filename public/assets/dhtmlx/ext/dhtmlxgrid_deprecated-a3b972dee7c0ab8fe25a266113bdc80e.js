/*SET EVENT HANDLERS*/
//#events_basic:21092006{
/**
   *     @desc: set function called when row selected  ( event is async )
   *     @param: func - event handling function (or its name)
   *     @param: anyClick - call handler on any click event, react only on changed row by default
   *     @type: deprecated
   *     @topic: 10
   *     @event: onRowSelect
   *     @eventdesc: Event raised immideatly after row was clicked.
   *     @eventparam:  ID of clicked row
   *     @eventparam:  index of clicked cell
   */
dhtmlXGridObject.prototype.setOnRowSelectHandler=function(e,t){this.attachEvent("onRowSelect",e),this._chRRS=!convertStringToBoolean(t)},dhtmlXGridObject.prototype.setOnScrollHandler=function(e){this.attachEvent("onScroll",e)},dhtmlXGridObject.prototype.setOnEditCellHandler=function(e){this.attachEvent("onEditCell",e)},dhtmlXGridObject.prototype.setOnCheckHandler=function(e){this.attachEvent("onCheckbox",e)},dhtmlXGridObject.prototype.setOnEnterPressedHandler=function(e){this.attachEvent("onEnter",e)},dhtmlXGridObject.prototype.setOnBeforeRowDeletedHandler=function(e){this.attachEvent("onBeforeRowDeleted",e)},dhtmlXGridObject.prototype.setOnRowAddedHandler=function(e){this.attachEvent("onRowAdded",e)},dhtmlXGridObject.prototype.setOnGridReconstructedHandler=function(e){this.attachEvent("onGridReconstructed",e)},dhtmlXGridObject.prototype.setOnResize=function(e){this.attachEvent("onResize",e)},dhtmlXGridObject.prototype.setOnBeforeSelect=function(e){this.attachEvent("onBeforeSelect",e)},dhtmlXGridObject.prototype.setOnRowCreated=function(e){this.attachEvent("onRowCreated",e)},dhtmlXGridObject.prototype.setOnLoadingEnd=function(e){this.attachEvent("onXLE",e)},dhtmlXGridObject.prototype.setOnCellChanged=function(e){this.attachEvent("onCellChanged",e)},dhtmlXGridObject.prototype.setOnLoadingStart=function(e){this.attachEvent("onXLS",e)},dhtmlXGridObject.prototype.setOnColumnSort=function(e){this.attachEvent("onBeforeSorting",e)},dhtmlXGridObject.prototype.setOnSelectStateChanged=function(e){this.attachEvent("onSelectStateChanged",e)},dhtmlXGridObject.prototype.setOnRowDblClickedHandler=function(e){this.attachEvent("onRowDblClicked",e)},dhtmlXGridObject.prototype.setOnHeaderClickHandler=function(e){this.attachEvent("onHeaderClick",e)},dhtmlXGridObject.prototype.setOnResizeEnd=function(e){this.attachEvent("onResizeEnd",e)},dhtmlXGridObject.prototype.setOnBeforeContextMenu=function(e){this.attachEvent("onBeforeContextMenu",e)},dhtmlXGridObject.prototype.setOnRightClick=function(e){this.attachEvent("onRightClick",e)},dhtmlXGridObject.prototype.setOnKeyPressed=function(e){this.attachEvent("onKeyPress",e)},dhtmlXGridObject.prototype.setDragHandler=function(e){this.attachEvent("onDrag",e)},dhtmlXGridObject.prototype.setDropHandler=function(e){this.attachEvent("onDrop",e)},dhtmlXGridObject.prototype.setDragInHandler=function(e){this.attachEvent("onDragIn",e)},dhtmlXGridObject.prototype.setOnBeforeColumnMove=function(e){this.attachEvent("onBeforeCMove",e)},dhtmlXGridObject.prototype.setOnAfterColumnMove=function(e){this.attachEvent("onAfterCMove",e)};